
server.tomcat.accesslog.enabled=true    
# Optional but this helps in debugging purposes

# set up some rules for DB
spring.jpa.hibernate.ddl-auto=update
# this line helps automatically go to the table and update the column in DB (either add or remove attribute)
# it will check for schema changes and update accordingly

spring.jpa.show-sql=true
# this line shows the SQL that is executed on the console

spring.datasource.url=jdbc:postgresql:dpg-cq1172aju9rs73b5ld1g-a.oregon-postgres.render.com/demo_ifuy
# above is the EXTERNAL URL to DB that we are connecting (b/c we are this application locally => use external to connect (via internet) to DB stored on render.com)
# when push application to render.com => would be more secure to connect to DB via INTERNAL URL

# spring.datasource.url=jdbc:postgresql://dpg-cpd7j0fsc6pc738m4cpg-a/database_5w00
# above is the INTERNAL URL => when I push application onto render => Use internal URL to communicate w/ DB
# Pros: It doesnt matter who knows what my URL or my password is => They wont be able to access if dont know what my URL is

spring.datasource.username=demo_ifuy_user
spring.datasource.password=M1vXoUnoRwALW5kUlze87xPs5ZTUzw3L
# Show password explicitly is not a good idea 
# b/c if this file is pushed publicly to GitHub, ppl can take the password and connect to DB and do anything they want



